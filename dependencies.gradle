ext {
    // Libraries
    versionAndroidSDK = '27.0.1'
    versionConstraintLayout = '1.0.2'
    versionFirebase = '11.8.0'
    versionJavaRx = '2.1.2'
    versionArch = '1.0.0'
    versionArchRuntime = '1.0.3'
    versionAndroidRx = '2.0.1'
    versionButterknife = '8.8.1'
    versionButterknifeCompiler = '8.8.1'
    versionToothpick = '1.1.1'
    versionDagger = '2.11'

    // Testing
    versionJUnit = '4.12'
    versionEspressoCore = '2.2.2'

    modules = [
            app       : ":app",
            domain    : ":domain",
            interactor: ":interactor",
            repository: ":repository",
            tools     : ":tools",
            storage   : ":storage",
            cache     : ":cache",
            uimodel   : ":uimodel"
    ]
    def libs = [
            appCompat             : "com.android.support:appcompat-v7:${versionAndroidSDK}",
            annotations           : "com.android.support:support-annotations:${versionAndroidSDK}",
            constraintLayout      : "com.android.support.constraint:constraint-layout:${versionConstraintLayout}",
            design                : "com.android.support:design:${versionAndroidSDK}",

            archRuntime           : "android.arch.lifecycle:runtime:${versionArchRuntime}",
            archExtensions        : "android.arch.lifecycle:extensions:${versionArch}",
            archCompiler          : "android.arch.lifecycle:compiler:${versionArch}",

            javaRx                : "io.reactivex.rxjava2:rxjava:${versionJavaRx}",
            androidRx             : "io.reactivex.rxjava2:rxandroid:${versionAndroidRx}",

            dagger                : "com.google.dagger:dagger:${versionDagger}",
            daggerCompiler        : "com.google.dagger:dagger-compiler:${versionDagger}",
            daggerAndroidSupport  : "com.google.dagger:dagger-android-support:${versionDagger}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${versionDagger}",

            firebaseDatabase      : "com.google.firebase:firebase-database:${versionFirebase}",
            firebaseStorage       : "com.google.firebase:firebase-storage:${versionFirebase}",
            firebaseCore          : "com.google.firebase:firebase-core:${versionFirebase}",

            butterknife           : "com.jakewharton:butterknife:${versionButterknife}",
            butterknifeCompiler   : "com.jakewharton:butterknife-compiler:${versionButterknifeCompiler}",

            kotlin                : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    ]

    testLibs = [
            junit             : "junit:junit:${versionJUnit}",
            androidTestCompile: "com.android.support.test.espresso:espresso-core:${versionEspressoCore}"
    ]

    def impl = 'implementation'
    def testImpl = 'testImplementation'
    def androidTestImpl = 'androidTestImplementation'
    def apt = 'kapt'

    appDependencies = [
            [configuration: impl, dependency: project(modules.interactor)],
            [configuration: impl, dependency: project(modules.storage)],
            [configuration: impl, dependency: project(modules.repository)],
            [configuration: impl, dependency: project(modules.cache)],
            [configuration: impl, dependency: project(modules.domain)],
            [configuration: impl, dependency: project(modules.tools)],
            [configuration: impl, dependency: project(modules.uimodel)],

            [configuration: impl, dependency: libs.appCompat],
            [configuration: impl, dependency: libs.constraintLayout],
            [configuration: impl, dependency: libs.design],
            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.archRuntime],
            [configuration: impl, dependency: libs.archExtensions],
            [configuration: apt, dependency: libs.archCompiler],

            [configuration: impl, dependency: libs.javaRx],
            [configuration: impl, dependency: libs.androidRx],

            [configuration: impl, dependency: libs.butterknife],
            [configuration: apt, dependency: libs.butterknifeCompiler],

            [configuration: impl, dependency: libs.dagger],
            [configuration: impl, dependency: libs.daggerAndroidSupport, options: { exclude module: 'jsr305' }],
            [configuration: apt, dependency: libs.daggerCompiler],
            [configuration: apt, dependency: libs.daggerAndroidProcessor],

            [configuration: impl, dependency: libs.firebaseCore],

            [configuration: impl, dependency: libs.kotlin],

            [configuration: testImpl, dependency: testLibs.junit],

            // androidTestCompile
            [configuration: androidTestImpl, dependency: testLibs.androidTestCompile, options: {
                exclude module: 'support-annotations'
            }]
    ]

    interactorDependencies = [
            [configuration: impl, dependency: project(modules.repository)],
            [configuration: impl, dependency: project(modules.domain)],

            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.javaRx],
            [configuration: impl, dependency: libs.dagger],

            [configuration: impl, dependency: libs.kotlin],

            [configuration: testImpl, dependency: testLibs.junit]
    ]

    repositoryDependencies = [
            [configuration: impl, dependency: project(modules.domain)],
            [configuration: impl, dependency: project(modules.tools)],

            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.javaRx],
            [configuration: impl, dependency: libs.dagger],

            [configuration: impl, dependency: libs.kotlin],

            [configuration: testImpl, dependency: testLibs.junit]
    ]

    domainDependencies = [
            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.kotlin]
    ]

    uimodelDependencies = [
            [configuration: impl, dependency: libs.kotlin]
    ]

    storageDependencies = [
            [configuration: impl, dependency: project(modules.domain)],
            [configuration: impl, dependency: project(modules.repository)],
            [configuration: impl, dependency: project(modules.tools)],

            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.javaRx],
            [configuration: impl, dependency: libs.dagger],

            [configuration: impl, dependency: libs.firebaseDatabase],
            [configuration: impl, dependency: libs.firebaseStorage],
            [configuration: impl, dependency: libs.firebaseCore],

            [configuration: impl, dependency: libs.kotlin]
    ]

    cacheDependencies = [
            [configuration: impl, dependency: project(modules.repository)],
            [configuration: impl, dependency: project(modules.domain)],

            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.javaRx],

            [configuration: impl, dependency: libs.kotlin]
    ]

    toolsDependencies = [
            [configuration: impl, dependency: libs.annotations],

            [configuration: impl, dependency: libs.javaRx],

            [configuration: impl, dependency: libs.kotlin]
    ]
}
