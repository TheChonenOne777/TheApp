ext {
    // Libraries
    versionAndroidSDK = '27.0.1'
    versionConstraintLayout = '1.0.2'
    versionFirebase = '11.8.0'
    versionJavaRx = '2.1.2'
    versionArch = '1.0.0'
    versionArchRuntime = '1.0.3'
    versionAndroidRx = '2.0.1'
    versionButterknife = '8.8.1'
    versionButterknifeCompiler = '8.8.1'
    versionToothpick = '1.1.1'
    versionDagger = '2.11'

    // Testing
    versionJUnit = '4.12'
    versionEspressoCore = '2.2.2'

    modules = [
            app       : ":app",
            domain    : ":domain",
            interactor: ":interactor",
            repository: ":repository",
            tools     : ":tools",
            storage   : ":storage",
            cache     : ":cache"
    ]
    def libs = [
            appCompat             : [group: 'com.android.support', name: 'appcompat-v7', version: versionAndroidSDK],
            annotations           : [group: 'com.android.support', name: 'support-annotations', version: versionAndroidSDK],
            constraintLayout      : [group: 'com.android.support.constraint', name: 'constraint-layout', version: versionConstraintLayout],
            design                : [group: 'com.android.support', name: 'design', version: versionAndroidSDK],

            archRuntime           : [group: 'android.arch.lifecycle', name: 'runtime', version: versionArchRuntime],
            archExtensions        : [group: 'android.arch.lifecycle', name: 'extensions', version: versionArch],
            archCompiler          : [group: 'android.arch.lifecycle', name: 'compiler', version: versionArch],

            javaRx                : [group: 'io.reactivex.rxjava2', name: 'rxjava', version: versionJavaRx],
            androidRx             : [group: 'io.reactivex.rxjava2', name: 'rxandroid', version: versionAndroidRx],

            dagger                : [group: 'com.google.dagger', name: 'dagger', version: versionDagger],
            daggerCompiler        : [group: 'com.google.dagger', name: 'dagger-compiler', version: versionDagger],
            daggerAndroidSupport  : [group: 'com.google.dagger', name: 'dagger-android-support', version: versionDagger],
            daggerAndroidProcessor: [group: 'com.google.dagger', name: 'dagger-android-processor', version: versionDagger],

            firebaseDatabase      : [group: 'com.google.firebase', name: 'firebase-database', version: versionFirebase],
            firebaseStorage       : [group: 'com.google.firebase', name: 'firebase-storage', version: versionFirebase],

            butterknife           : [group: 'com.jakewharton', name: 'butterknife', version: versionButterknife],
            butterknifeCompiler   : [group: 'com.jakewharton', name: 'butterknife-compiler', version: versionButterknifeCompiler]

    ]

    testLibs = [
            junit             : [group: 'junit', name: 'junit', version: versionJUnit],
            androidTestCompile: [group: 'com.android.support.test.espresso', name: 'espresso-core', version: versionEspressoCore]
    ]

    def compile = 'compile'
    def api = 'api'
    def impl = 'implementation'
    def testImpl = 'testImplementation'
    def testCompile = 'testCompile'
    def androidTestImpl = 'androidTestImplementation'
    def annotationProcessor = 'annotationProcessor'

    appDependencies = [
            [configuration: impl, dependency: project(modules.interactor)],
            [configuration: impl, dependency: project(modules.storage)],
            [configuration: impl, dependency: project(modules.cache)],

            [configuration: impl, dependency: libs.appCompat],
            [configuration: impl, dependency: libs.constraintLayout],
            [configuration: impl, dependency: libs.design],

            [configuration: impl, dependency: libs.archRuntime],
            [configuration: impl, dependency: libs.archExtensions],
            [configuration: annotationProcessor, dependency: libs.archCompiler],

            [configuration: impl, dependency: libs.androidRx],

            [configuration: impl, dependency: libs.butterknife],
            [configuration: annotationProcessor, dependency: libs.butterknifeCompiler],

            [configuration: impl, dependency: libs.daggerAndroidSupport, options: { exclude module: 'jsr305' }],
            [configuration: annotationProcessor, dependency: libs.daggerCompiler],
            [configuration: annotationProcessor, dependency: libs.daggerAndroidProcessor],

            [configuration: testImpl, dependency: testLibs.junit],

            // androidTestCompile
            [configuration: androidTestImpl, dependency: testLibs.androidTestCompile, options: {
                exclude module: 'support-annotations'
            }]
    ]

    interactorDependencies = [
            [configuration: impl, dependency: project(modules.repository)],

            [configuration: testCompile, dependency: testLibs.junit]
    ]

    repositoryDependencies = [
            [configuration: compile, dependency: project(modules.domain)],
            [configuration: compile, dependency: libs.javaRx],
            [configuration: compile, dependency: libs.dagger],

            [configuration: testCompile, dependency: testLibs.junit]
    ]

    domainDependencies = [
            [configuration: compile, dependency: libs.annotations],
    ]

    storageDependencies = [
            [configuration: api, dependency: project(modules.domain)],
            [configuration: api, dependency: project(modules.tools)],
            [configuration: api, dependency: project(modules.repository)],

            [configuration: api, dependency: libs.dagger],

            [configuration: api, dependency: libs.firebaseStorage],
            [configuration: impl, dependency: libs.firebaseDatabase]
    ]

    cacheDependencies = [
            [configuration: impl, dependency: project(modules.repository)],

            [configuration: impl, dependency: libs.javaRx]
    ]

    toolsDependencies = [
            [configuration: compile, dependency: libs.annotations],

            [configuration: compile, dependency: libs.javaRx]
    ]
}
